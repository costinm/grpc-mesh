kind: Gateway
apiVersion: gateway.networking.k8s.io/v1alpha2
metadata:
  # Using the original istio name. If the deployment is deleted, the controller should create a new one.
  # Note that controller is using the label  istio.io/gateway-name: istio-ingressgateway
  # To migrate from manually deployed gateway to automatic, while keeping the IP you need to edit the service
  # and remove selector: istio:ingressgateway
  name: istio-egressssgateway
  namespace: istio-system
  annotations:
    # In case the service is used with TD
    cloud.google.com/neg: '{"exposed_ports":{"15015":{}}}'
    # The service is not meant for mesh use - excluding from cluster generation.
    networking.istio.io/exportTo: .

    # Create ILB service, egress gateway should not be visible outside
    networking.gke.io/load-balancer-type: "Internal"
    cloud.google.com/load-balancer-type: "Internal"
    networking.gke.io/internal-load-balancer-allow-global-access: "true"

    # If workload certs are enabled, will be configured. The deployment will detect the presence of the files,
    # may load the config to identify the pool (initially we'll use a hard-coded default name)
    # Must also configure cas_template.
    security.cloud.google.com/use-workload-certificates: ""
  labels:

    # To make this consistent with istio
    istio: egressgateway
spec:
  gatewayClassName: egress
  listeners:
    # This is the SNI router port - similar with the east-west gateway
    - protocol: TLS
      name: sni
      port: 15443
      tls:
        mode: Passthrough

    # HBone
    - protocol: HTTPS
      name: istiod
      port: 15017
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: cert-istiod

    # Explicit
    - name: explicit-1
      hostname: "*.local"
      port: 15444
      protocol: TLS
      tls:
        mode: Passthrough
